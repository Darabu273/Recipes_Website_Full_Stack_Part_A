---
openapi: 3.0.0
info:
  title: Simple Inventory API
  description: This is a simple API
  contact:
    email: hersko@post.bgu.ac.il
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.0
servers:
- url: "http://127.0.0.1:3000"
  description: SwaggerHub API Auto Mocking
tags:
- name: main
  description: Start page - menu.
- name: auth
  description: Login,Logout and Register actions
- name: recipes
  description: recipes functions to get information related to recipes.
- name: users
  description: perform actions of a logged-in user. his favorites, last seen, personal and family recipes.
paths:
  /auth/Login:
    post:
      tags:
      - auth
      summary: User logged in to the system server.
      operationId: Login
      requestBody:
        description: logout as a user by passing credential
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/userLogin'
      responses:
        "200":
          description: login succeeded
          headers:
            Set-Cookie:
              style: simple
              explode: false
              schema:
                type: string
                example: session = Rh5GCnsw5Ktu37JjSm2r
        "401":
          description: Username or Password incorrect
  /auth/Logout:
    post:
      tags:
      - auth
      summary: User logged out to the system server.
      operationId: Logout
      requestBody:
        description: logout as a user by passing a username and delete the coockie.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/userLogout'
      responses:
        "200":
          description: logout succeeded
          headers:
            Set-Cookie:
              style: simple
              explode: false
              schema:
                type: string
                example: session need to add exmple like bardugo
        "401":
          description: Username or Password incorrect
  /auth/Register:
    post:
      tags:
      - auth
      summary: Register a new user to the system.
      operationId: Register
      requestBody:
        description: logout as a user by passing credential
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/userLogin'
      responses:
        "200":
          description: Register succeeded
          headers:
            Set-Cookie:
              style: simple
              explode: false
              schema:
                type: string
                example: session = Rh5GCnsw5Ktu37JjSm2r
        "401":
          description: Username or password incrorrect
  /users/favorite:
    get:
      tags:
      - users
      summary: get the favorite of the user
      description: get all favorite according to the user_id
      operationId: getfavorite
      responses:
        "200":
          description: successful operation- favorite returned
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/recipePreview'
        "400":
          description: Invalid ID supplied
        "401":
          description: Not connected to the Data Base
        "402":
          description: Request failed because not enough credit in the sponcular API
    post:
      tags:
      - users
      summary: update a favorite with recipe id
      description: add to the DB a recipe as favorite
      operationId: setfavorite
      requestBody:
        description: JSON object for register
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/recipeId'
        required: true
      responses:
        "200":
          description: successful operation, element added to favorite
        "400":
          description: Invalid ID supplied
        "401":
          description: Not connected to the Data Base
  /users/myrecipe/{recipeId}:
    get:
      tags:
      - users
      summary: search a recipe from the personal recipes by its id
      description: get a personal's recipe by its id
      operationId: getRecipeByID
      parameters:
      - name: recipeId
        in: path
        description: Id of recipe to return
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
        example: 8
      responses:
        "200":
          description: successful operation,recipe returned
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/recipeCompletePersonal'
        "400":
          description: Invalid Id supplied
        "404":
          description: Recipe not found
  /users/myrecipe:
    get:
      tags:
      - users
      summary: get all the personal recipes of the user according to the user_id
      description: get all favorite
      operationId: getmyrecipe
      responses:
        "200":
          description: successful operation - personal recipe returned
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/recipePreviewPersonal'
        "400":
          description: Invalid ID supplied
        "401":
          description: Not connected to the Data Base
        "402":
          description: Request failed because not enough credit in the sponcular API
    post:
      tags:
      - users
      summary: upload a personal recipe
      description: upload a recipe as a personal recipe
      operationId: setmyrecipe
      requestBody:
        description: JSON object for register
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/recipePreviewPersonal'
        required: true
      responses:
        "200":
          description: successful operation, element added to mypersonal recipe
        "400":
          description: Invalid recipe supplied
        "401":
          description: Not connected to the Data Base
  /users/lastSeenRecipe:
    post:
      tags:
      - users
      summary: mark a recipe as seen
      description: mark a recipe as last seen
      operationId: setmylastseenrecipe
      requestBody:
        description: JSON object for register
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/recipeId'
        required: true
      responses:
        "200":
          description: successful operation, element added to mypersonal recipe
        "400":
          description: Invalid recipe supplied
        "401":
          description: Not connected to the Data Base
  /users/lastSeenRecipe/{number}:
    get:
      tags:
      - users
      summary: get the last recipes visited
      description: get a numb last seen of recipe
      operationId: getlastseenrecipe
      parameters:
      - name: number
        in: path
        description: numb recipes to return
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
        example: 3
      responses:
        "200":
          description: successful operation, numb last seen recipe returned
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/recipePreview'
        "400":
          description: Invalid parameter supplied
        "401":
          description: Not connected to the Data Base
        "402":
          description: Request failed because not enough credit in the sponcular API
  /users/family:
    get:
      tags:
      - users
      summary: get all the personal recipes of the user according to the user_id
      description: get all favorite
      operationId: getfamily
      responses:
        "200":
          description: successful operation - personal recipe returned
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/recipeFamily'
        "400":
          description: Invalid ID supplied
        "401":
          description: Not connected to the Data Base
  /recipes/{recipeId}:
    get:
      tags:
      - recipes
      summary: search a recipe by its id
      description: get a recipe by its id
      operationId: getRecipeByID
      parameters:
      - name: recipeId
        in: path
        description: Id of recipe to return
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
        example: 637593
      responses:
        "200":
          description: successful operation,recipe returned
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/recipeComplete'
        "400":
          description: Invalid Id supplied
        "402":
          description: Request failed because not enough credit in the sponcular API
        "404":
          description: Recipe not found
  /recipes/random/{number}:
    get:
      tags:
      - recipes
      summary: get some random recipes according to the number given as parameter
      description: get a numb random of recipe
      operationId: random
      parameters:
      - name: number
        in: path
        description: numb recipes to return
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
        example: 3
      responses:
        "200":
          description: successful operation, numb recipe returned
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/recipePreview'
        "400":
          description: Invalid parameter supplied
        "402":
          description: Request failed because not enough credit in the sponcular API
        "404":
          description: page not found
  /recipes/search:
    get:
      tags:
      - recipes
      summary: get the last recipes visited
      description: get a numb last seen of recipe
      operationId: getsearch
      parameters:
      - name: query
        in: query
        description: query recieve as a free text in the function
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: gefilte fish
      - name: num
        in: query
        description: num recieve to know how much recipe to retrieve
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 5
      - name: cuisine
        in: query
        description: type of cuisine to indicate to make a search more speicific
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: Jewish
      - name: diet
        in: query
        description: type of cuisine to indicate to make a search more specific
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: Vegan
      - name: intolerances
        in: query
        description: type of intolerances to indicate to make a search more specific
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: peanuts
      responses:
        "200":
          description: successful operation, numb last seen recipe returned
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/recipePreview'
        "400":
          description: Invalid parameter supplied
        "402":
          description: Request failed because not enough credit in the sponcular API
        "404":
          description: page not found
components:
  schemas:
    userLogin:
      required:
      - password
      - username
      type: object
      properties:
        username:
          maxLength: 8
          minLength: 3
          type: string
          example: ido3010
        password:
          type: string
          example: ido123
    userLogout:
      required:
      - username
      type: object
      properties:
        username:
          maxLength: 8
          minLength: 3
          type: string
          example: ido3010
    recipeId:
      required:
      - recipeId
      type: object
      properties:
        recipeId:
          type: integer
          example: 5
    recipePreview:
      required:
      - flagInFavorite
      - flagInLastSeen
      - glutenFree
      - id
      - image
      - popularity
      - readyInMinutes
      - title
      - vegan
      - vegetarian
      type: object
      properties:
        id:
          type: integer
          example: 634070
        title:
          minLength: 2
          type: string
          example: Banana Creme Brulee
        readyInMinutes:
          type: integer
          example: 63
        image:
          type: string
          example: "50"
        popularity:
          type: integer
          example: 5
        vegan:
          type: boolean
          example: false
        vegetarian:
          type: boolean
          example: true
        glutenFree:
          type: boolean
          example: true
        flagInFavorite:
          type: boolean
          example: false
        flagInLastSeen:
          type: boolean
          example: true
    recipeComplete:
      required:
      - flagInFavorite
      - flagInLastSeen
      - glutenFree
      - id
      - image
      - ingredients
      - instructions
      - popularity
      - readyInMinutes
      - servings
      - title
      - vegan
      - vegetarian
      - analyzedInstructions
      - extendedIngredients
      type: object
      properties:
        id:
          type: integer
          example: 634070
        title:
          minLength: 2
          type: string
          example: Banana Creme Brulee
        readyInMinutes:
          type: integer
          example: 63
        image:
          type: string
          example: "50"
        popularity:
          type: integer
          example: 5
        vegan:
          type: boolean
          example: false
        vegetarian:
          type: boolean
          example: true
        glutenFree:
          type: boolean
          example: true
        ingredients:
          minLength: 2
          type: string
          example: Banana, Cacao, Sugar
        servings:
          type: integer
          example: 5
        extendedIngredients:
          type: string
          example: Banana 100 gram, cacao 1 cup, sugar 1 cup
        instructions:
          minLength: 2
          type: string
          example: peal of the Banana, melt it with cacao and sugar
        analyzedInstructions:
          type: string
          example: 1.peal of the banana 2.melt it with cacao and sugar
        flagInFavorite:
          type: boolean
          example: false
        flagInLastSeen:
          type: boolean
          example: true
    recipePreviewPersonal:
      required:
      - glutenFree
      - id
      - image
      - popularity
      - readyInMinutes
      - title
      - vegan
      - vegetarian
      type: object
      properties:
        id:
          type: integer
          example: 8
        title:
          type: string
          example: Gefilte Fish
        readyInMinutes:
          type: integer
          example: 63
        image:
          type: string
          example: "https://dar_abu_told_me_she_loves_gefilte_fish.com/picture"
        popularity:
          type: integer
          example: 1
        vegan:
          type: string
          example: "false"
        vegetarian:
          type: string
          example: "true"
        glutenFree:
          type: string
          example: "true"
    recipeCompletePersonal:
      required:
      - glutenFree
      - id
      - image
      - ingredients
      - instructions
      - popularity
      - readyInMinutes
      - servings
      - title
      - vegan
      - vegetarian
      type: object
      properties:
        id:
          type: integer
          example: 8
        title:
          type: string
          example: Gefilte Fish
        readyInMinutes:
          type: integer
          example: 63
        image:
          type: string
          example: "https://dar_abu_told_me_she_loves_gefilte_fish.com/picture"
        popularity:
          type: integer
          example: 1
        vegan:
          type: string
          example: "false"
        vegetarian:
          type: string
          example: "true"
        glutenFree:
          type: string
          example: "true"
        ingredients:
          minLength: 2
          type: string
          example: karpion, carrots, salt
        servings:
          type: integer
          example: 5
        instructions:
          minLength: 2
          type: string
          example: peal of the karpion, call your grandma
    recipeFamily:
      required:
      - glutenFree
      - id
      - image
      - ingredients
      - instructions
      - popularity
      - readyInMinutes
      - servings
      - title
      - vegan
      - vegetarian
      - whenWePrepareIt
      - whoItBelongTo
      type: object
      properties:
        id:
          type: integer
          example: 634070
        title:
          minLength: 2
          type: string
          example: Banana Creme Brulee
        readyInMinutes:
          type: integer
          example: 63
        image:
          type: string
          example: "50"
        popularity:
          type: integer
          example: 5
        vegan:
          type: boolean
          example: false
        vegetarian:
          type: boolean
          example: true
        glutenFree:
          type: boolean
          example: true
        ingredients:
          minLength: 2
          type: string
          example: Banana, Cacao, Sugar
        servings:
          type: integer
          example: 5
        instructions:
          minLength: 2
          type: string
          example: peal of the Banana, melt it with cacao and sugar
        whenWePrepareIt:
          minLength: 2
          type: string
          example: When the night has come And the land is dark
        whoItBelongTo:
          minLength: 2
          type: string
          example: Savta chana kapara on her
